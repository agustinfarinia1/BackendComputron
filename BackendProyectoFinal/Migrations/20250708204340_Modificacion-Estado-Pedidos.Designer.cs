// <auto-generated />
using System;
using BackendProyectoFinal.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackendProyectoFinal.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20250708204340_Modificacion-Estado-Pedidos")]
    partial class ModificacionEstadoPedidos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BackendProyectoFinal.Models.Carrito", b =>
                {
                    b.Property<int>("CarritoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarritoID"));

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("CarritoID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Carritos");
                });

            modelBuilder.Entity("BackendProyectoFinal.Models.CategoriaProducto", b =>
                {
                    b.Property<int>("CategoriaProductoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaProductoID"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriaProductoID");

                    b.ToTable("CategoriaProductos");
                });

            modelBuilder.Entity("BackendProyectoFinal.Models.Domicilio", b =>
                {
                    b.Property<int>("DomicilioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DomicilioID"));

                    b.Property<string>("Departamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<int?>("Piso")
                        .HasColumnType("int");

                    b.HasKey("DomicilioID");

                    b.ToTable("Domicilios");
                });

            modelBuilder.Entity("BackendProyectoFinal.Models.EstadoPedido", b =>
                {
                    b.Property<int>("EstadoPedidoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadoPedidoID"));

                    b.Property<int?>("EstadoSiguienteID")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstadoPedidoID");

                    b.ToTable("EstadosDePedidos");
                });

            modelBuilder.Entity("BackendProyectoFinal.Models.ItemCarrito", b =>
                {
                    b.Property<int>("ItemCarritoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemCarritoID"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("CarritoID")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("ItemCarritoID");

                    b.HasIndex("CarritoID");

                    b.HasIndex("ProductoId");

                    b.ToTable("ItemCarrito");
                });

            modelBuilder.Entity("BackendProyectoFinal.Models.ItemPedido", b =>
                {
                    b.Property<int>("ItemPedidoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemPedidoID"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("PedidoID")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("ItemPedidoID");

                    b.HasIndex("PedidoID");

                    b.HasIndex("ProductoId");

                    b.ToTable("ItemPedido");
                });

            modelBuilder.Entity("BackendProyectoFinal.Models.Marca", b =>
                {
                    b.Property<int>("MarcaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MarcaID"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MarcaID");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("BackendProyectoFinal.Models.Pedido", b =>
                {
                    b.Property<int>("PedidoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PedidoID"));

                    b.Property<int>("DomicilioID")
                        .HasColumnType("int");

                    b.Property<int>("EstadoPedidoID")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("PedidoID");

                    b.HasIndex("DomicilioID");

                    b.HasIndex("EstadoPedidoID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("BackendProyectoFinal.Models.Producto", b =>
                {
                    b.Property<int>("ProductoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoID"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaProductoID")
                        .HasColumnType("int");

                    b.Property<string>("CodigoML")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateOnly>("FechaCreacion")
                        .HasColumnType("date");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MarcaID")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductoID");

                    b.HasIndex("CategoriaProductoID");

                    b.HasIndex("MarcaID");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("BackendProyectoFinal.Models.Rol", b =>
                {
                    b.Property<int>("RolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolID"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RolID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("BackendProyectoFinal.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioID"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DomicilioID")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RolID")
                        .HasColumnType("int");

                    b.HasKey("UsuarioID");

                    b.HasIndex("DomicilioID");

                    b.HasIndex("RolID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("BackendProyectoFinal.Models.Carrito", b =>
                {
                    b.HasOne("BackendProyectoFinal.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BackendProyectoFinal.Models.EstadoPedido", b =>
                {
                    b.HasOne("BackendProyectoFinal.Models.EstadoPedido", "EstadoSiguiente")
                        .WithMany()
                        .HasForeignKey("EstadoPedidoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoSiguiente");
                });

            modelBuilder.Entity("BackendProyectoFinal.Models.ItemCarrito", b =>
                {
                    b.HasOne("BackendProyectoFinal.Models.Carrito", null)
                        .WithMany("ListaCarrito")
                        .HasForeignKey("CarritoID");

                    b.HasOne("BackendProyectoFinal.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("BackendProyectoFinal.Models.ItemPedido", b =>
                {
                    b.HasOne("BackendProyectoFinal.Models.Pedido", null)
                        .WithMany("ListaPedido")
                        .HasForeignKey("PedidoID");

                    b.HasOne("BackendProyectoFinal.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("BackendProyectoFinal.Models.Pedido", b =>
                {
                    b.HasOne("BackendProyectoFinal.Models.Domicilio", "DomicilioEntrega")
                        .WithMany()
                        .HasForeignKey("DomicilioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendProyectoFinal.Models.EstadoPedido", "EstadoPedido")
                        .WithMany()
                        .HasForeignKey("EstadoPedidoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendProyectoFinal.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DomicilioEntrega");

                    b.Navigation("EstadoPedido");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BackendProyectoFinal.Models.Producto", b =>
                {
                    b.HasOne("BackendProyectoFinal.Models.CategoriaProducto", "CategoriaProducto")
                        .WithMany()
                        .HasForeignKey("CategoriaProductoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendProyectoFinal.Models.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaProducto");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("BackendProyectoFinal.Models.Usuario", b =>
                {
                    b.HasOne("BackendProyectoFinal.Models.Domicilio", "Domicilio")
                        .WithMany()
                        .HasForeignKey("DomicilioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendProyectoFinal.Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Domicilio");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("BackendProyectoFinal.Models.Carrito", b =>
                {
                    b.Navigation("ListaCarrito");
                });

            modelBuilder.Entity("BackendProyectoFinal.Models.Pedido", b =>
                {
                    b.Navigation("ListaPedido");
                });
#pragma warning restore 612, 618
        }
    }
}
